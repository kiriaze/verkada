.split-intro {
	color: white;
	position: relative;
	overflow: hidden;
	@include fluid-scale(padding-top padding-bottom, map-get($breakpoints, 'tiny'), map-get($breakpoints, 'xxxlarge'), 140px, 320px); // using fluid padding over fh
	.container {
		display: flex;
		align-items: center;
		// min-height: 100vh; // assuming fh vs 128rem comp
		h2 {
			@include mq('large', max) {
				line-height: 1.4;
			}
		}
		p {
			margin: 4vw 0 6vw;
			@include mq('large') {
				margin: 7rem 0;
			}
		}
		.row {
			width: 100%;
			@include mq('large', max) {
				display: block;
				margin: 0 auto;
				max-width: 58rem;
			}
		}
	}
	&__content {
		width: 100%;
		margin: 0 auto;
		text-align: center;
		@include mq('large') {
			text-align: left;
			@include grid-col(4/12);
		}
	}
	&__media {
		margin-top: 5vw;
		width: 100%;
		@include mq('large') {
			margin-top: 0;
			@include grid-col(8/12);
			@include grid-shift(1/12);
		}
	}
	.video-wrapper {
		position: relative;
		width: 100%;
		padding-bottom: 70%;
		background-color: black;
	}
	.plus-cta {
		display: none;
		cursor: pointer;
		position: absolute;
		top: 0;
		right: 0;
		color: black;
		width: 5.5rem;
		height: 5.5rem;
		background: white;
		border-radius: 50%;
		align-items: center;
		justify-content: center;
		transform: translate3d(50%, -50%, 0);
		box-shadow: 0 4rem 5.5rem 0 rgba(205, 204, 216, 0.5);
		@include mq('large') {
			display: flex;
		}
		svg {
			width: 1.5rem;
			height: 1.5rem;
			transition: transform .35s ease;
		}
		&:hover {
			svg {
				transform: rotate(180deg);
			}
		}
	}
	&__bg {
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		z-index: -1;
		position: absolute;
		background-color: map-get($colors, brand-secondary);
		@include mq('large') {
			width: 75vw;
			max-width: 62.5%;
		}
	}
}